<?php
namespace App\Controller;

use App\Controller\AppController;
use App\Model\Table\UsersTable;
use Cake\ORM\TableRegistry;

/**
 * Users Controller
 *
 * @property \App\Model\Table\UsersTable $Users
 *
 * @method \App\Model\Entity\User[] paginate($object = null, array $settings = [])
 */
class UsersController extends AppController
{
    private $user;
    private $invites;
    private $eventNotifications;
    private $sortNotifications;
    private $messageNotifications;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadComponent('Invites');
        $this->loadComponent('Notifications');

        $this->Auth->allow(['index', 'view','add']);

    }

    /**
     * Index method
     *
     * @return \Cake\Http\Response|void
     */
    public function index()
    {

        $users = $this->paginate($this->Users);

        $this->set(compact('users'));
        $this->set('_serialize', ['users']);
    }

    public function dashboard(){
        $this->user = $this->Auth->user();
        $query = TableRegistry::get('Users');
        $this->invites = $this->Invites->getUserGroupsInvites($this->user['id']);
        $this->eventNotifications = $this->Notifications->getEventsNotificationsFromUser($this->user['id']);
        $this->sortNotifications = $this->Notifications->getSortNotificationsFromUser($this->user['id']);
        $this->messageNotifications = $this->Notifications->getMessageNotificationsFromUser($this->user['id']);
        //$this->user['img_profile'] = (is_null($this->user['img_profile'])) ? 'profile_default.png' : 'profiles/'.$this->user['id'].'/'.$this->user['img_profile'];

        $myGroyps = $query->find('all')->where(['id'=>$this->user['id']])->matching('UsersGroup',function($q){
            return $q->where(['UsersGroup.user_id'=>$this->user['id'],'UsersGroup.invite_status'=>1]);
        })->count();

        $this->set('invites',$this->invites);
        $this->set('eventNotifications',$this->eventNotifications);
        $this->set('sortNotifications',$this->sortNotifications);
        $this->set('messageNotifications',$this->messageNotifications);
        $this->set('user',$this->Auth->user());
        $this->set('myGroups',$myGroyps);
    }
    /**
     * View method
     *
     * @param string|null $id User id.
     * @return \Cake\Http\Response|void
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $user = $this->Users->get($id, [
            'contain' => ['UsersGroup']
        ]);

        $this->set('user', $user);
        $this->set('_serialize', ['user']);
    }

    public function add()
    {

        if($this->request->is('post')){
            $data = $this->request->getData();

            if(isset($data['preferences'])){
                foreach($data['preferences'] as $key => $preference){
                    if($preference == '0'){
                        unset($data['preferences'][$key]);
                    }
                }
                sort($data['preferences']);
                $data['preferences'] = ($data['preferences'] != '') ? implode(',',$data['preferences']) : '';
            }else {
                $data['preferences'] = '';
            }

            $data['img_profile'] = 'profile_default.png';
            $user = $this->Users->newEntity($data);
            if($user->getErrors()){
                //$errorMessages = [];

                $this->Flash->error('Não foi possivel cadastrar', ['params'=>['errors'=>$user->getErrors()]]);

                return $this->redirect('/register');
            }else{
                $data['max_value'] = ($data['max_value'] == '' ) ? 'Sem preferência' : $data['max_value'];

                $this->Users->save($user);
                $this->Flash->success(__('Cadastro realizado com sucesso!'));
                return $this->redirect('/login');
            }

        }
    }

    public function profile(){
        $this->user = $this->Auth->user();
        $this->invites = $this->Invites->getUserGroupsInvites($this->user['id']);
        $this->eventNotifications = $this->Notifications->getEventsNotificationsFromUser($this->user['id']);
        $this->sortNotifications = $this->Notifications->getSortNotificationsFromUser($this->user['id']);
        $this->messageNotifications = $this->Notifications->getMessageNotificationsFromUser($this->user['id']);


        $usr = $this->Users->get($this->user['id']);
        $usr->preferences = explode(',',$usr->preferences);



        if($this->request->is('post')){
            $imgTypes = ['image/jpeg','image/jpg'];
            $file = $this->request->getData('img');
            if(in_array($file['type'],$imgTypes)){
                $size = $file['size']/pow(1024,2);
                if($size < (5*pow(1024,2))){
                    $fileFolder = WWW_ROOT."img".DS."profiles".DS.$this->user['id'].DS;
                    $filePath = $fileFolder.'profile.jpg';


                    if(!is_dir($fileFolder)){
                        mkdir($fileFolder,0777,true);
                    }

                    if(file_exists($filePath)){
                        unlink($filePath);
                    }

                    move_uploaded_file($file['tmp_name'],$filePath);

                    $usr->preferences = implode(',',$usr->preferences);
                    $usr->img_profile = 'profiles/'.$this->user['id'].'/'.'profile.jpg';
                    $this->Users->save($usr);
                    $this->Auth->setUser($usr);

                    $this->Flash->success(__('Imagem de perfil atualizada com sucesso!'));
                    $this->redirect(['_name'=>'user.profile']);

                }else{
                    $this->Flash->error(__('O arquivo deve ter no máximo 5MB'));
                }
            }else{
                $this->Flash->error(__('A imagem deve ser jpg ou jpeg'));
            }
        }

        $this->set('user',$usr);
        $this->set('invites',$this->invites);
        $this->set('eventNotifications',$this->eventNotifications);
        $this->set('sortNotifications',$this->sortNotifications);
        $this->set('messageNotifications',$this->messageNotifications);
    }
}
